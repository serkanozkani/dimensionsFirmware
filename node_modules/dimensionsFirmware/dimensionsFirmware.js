/*	* dimensionsFirmware.js
	*
	* This file is subject to the terms and conditions defined in
	* file 'LICENSE', which is part of this source code package.
	*
	* Authored by: Alexander Stokes
	* License: CC by-sa 4.0
	* Owner: Alexander Stokes LLC
	* Written: 2013-12-15
	*/
	
var SerialPort = require('serialport').SerialPort;


function DimensionsFirmware() {
	this.comName = '';
	this.serialPort = null;
}

DimensionsFirmware.prototype = Object.create(
	require('events').EventEmitter.prototype);


DimensionsFirmware.prototype.connect = function (comName) {
	var t = this;

	t.comName = comName;

	t.serialPort = new SerialPort(this.comName, {
		baudrate : 9600
	});
	
	/* From https://github.com/voodootikigod/node-serialport */
	t.serialPort.on("open", function () {
		console.log('open');
		t.serialPort.on('data', function(data) {
			console.log('data received: ' + data);
		
			t.emit('ready');
		});
		/* Don't actually send this request....
		
 		/* */
	});	
}

DimensionsFirmware.prototype.reset = function() {

	console.log ('writing printer.reset()');
	this.serialPort.write("printer.reset()\n", function(err, results) {
		console.log('err ' + err);
		console.log('results ' + results);
	});
}

exports.connect = function (comName) {
	var DFI = new DimensionsFirmware();
	DFI.connect(comName);
	return DFI;
}
