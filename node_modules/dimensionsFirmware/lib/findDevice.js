/*	* findDevice.js
	*
	* This file is subject to the terms and conditions defined in
	* file 'LICENSE', which is part of this source code package.
	*
	* Authored by: Alexander Stokes
	* License: CC by-sa 4.0
	* Owner: Alexander Stokes LLC
	* Written: 2013-12-19
	*/


var SerialPort = require('serialport');

exports.listDevices = function (Fn) {

	SerialPort.list(function (error, deviceListing) {
		if (error) {
			Fn (error);
			return;
		}

		Fn(null, deviceListing);
	})
}

exports.findBestMatch = function (deviceListing, Fn) {

	deviceListing.forEach(function (e, i, a) {

		var score = 0;

		if (~e.pnpId.indexOf('duino')) {
			score += 1;
		}

		if (~e.manufacturer.indexOf('rduino')) {
			score += 10
		}

		if (e.vendorId == '0x2341') {
			score += 10
			if (e.productId == '0x0042') {
				score += 100;
			}
		}

		a[i].score = score;
	})

	deviceListing.sort(function (a, b) {
		if (a.score == b.score) return 0;
		else return (a.score < b.score);
	})

	if (deviceListing[0].score > 0) {
		Fn (null, deviceListing[0]);
		return;
	}

	Fn (null, null);
}